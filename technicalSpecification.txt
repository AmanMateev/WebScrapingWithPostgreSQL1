Here is the translation of your text into English while maintaining its original format:

---

I want to get a list of proposals where each element of this list will consist of the book title, price, and availability.  
The price is displayed somewhat incorrectly. This needs to be fixed. Once I manage to output this list in the console,  
it would be nice to connect a database and configure saving the data into it.  
If things go well, then:  
- It would be great to add a filter to remove duplicates.  
- Add functionality that would update the information.  

-------

**Logic for the first task:**  
1) There will be a general list where collections of data will be stored.  
2) Write one loop that will process the array.  

-------

**New Task:**  
Extract all possible information from the website and save it into the database.  

-------

1) Group books by genres.  
2) Create a database to store all information about the books.  
3) Create a general table where all the book information will be stored.  
   The following fields will be available:  
   - ID  
   - Title  
   - Price  
   - Availability  
   - Genre  
4) Write SQL commands that will output tables of books grouped by genre.  

------------------------------------------------------------------------------------------------------------------------------  

**Additionally:**  
1) Make the script run continuously for approximately 10 minutes, during which 5 requests to the website will be sent,  
   i.e., every 2 minutes.  
2) Figure out how to extract the link from the genre tag to the page of a specific genre.  
3) Consider naming variables.  
4) Think about optimizing the code.  

------------------------------------------------------------------------------------------------------------------------------  

()()()()()()()()  
**Algorithm for the first task:**  
1.1) Create a loop where one genre at a time is extracted from the list of genres.  
1.2) Using the obtained genre, generate a string representing the link to the page of books grouped by genre.  
1.3) Navigate to the link, fetch the data, and create an object where the field will be the genre name, and its element  
     will be a list of books of this genre.  
1.4) In this way, create an object that roughly consists of 51 fields and 51 lists.  
1.5) Proceed to implement the second point.  
()()()()()()()()  